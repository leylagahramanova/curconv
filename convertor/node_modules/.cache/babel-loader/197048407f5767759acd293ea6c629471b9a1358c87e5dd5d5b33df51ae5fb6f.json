{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\CurseConvertor\\\\convertor\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect } from 'react';\nimport './App.css';\nimport { Block } from './Block';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction formatDate(date) {\n  const year = date.getFullYear();\n  const month = (date.getMonth() + 1).toString().padStart(2, '0');\n  const day = date.getDate().toString().padStart(2, '0');\n  return `${year}-${month}-${day}`;\n}\nfunction App() {\n  _s();\n  const [fromCurrency, setFromCurrency] = React.useState('RUB');\n  const [toCurrency, setToCurrency] = React.useState('USD');\n  const [toPrice, setToPrice] = React.useState(1);\n  const [fromPrice, setFromPrice] = React.useState(0);\n  const ratesRef = React.useRef({});\n  const onChangeFromPrice = useCallback(value => {\n    const price = value / ratesRef.current[fromCurrency];\n    const result = price * ratesRef.current[toCurrency];\n    setToPrice(result.toFixed(3));\n    setFromPrice(value);\n  }, [fromCurrency, toCurrency]);\n  const onChangeToPrice = useCallback(value => {\n    const result = ratesRef.current[fromCurrency] / ratesRef.current[toCurrency] * value;\n    setFromPrice(result.toFixed(3));\n    setToPrice(value);\n  }, [fromCurrency, toCurrency]);\n  useEffect(() => {\n    const currentDate = new Date();\n    const fetchXmlData = async () => {\n      try {\n        const formattedDate = formatDate(currentDate);\n        const response = await fetch(`https://cbar.az/currencies/${formattedDate}.xml`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch data');\n        }\n        const xmlText = await response.text();\n\n        // Convert XML data to JSON\n        const parser = new DOMParser();\n        const xmlDoc = parser.parseFromString(xmlText, 'text/xml');\n        const json = {};\n        const currencies = xmlDoc.getElementsByTagName('Valute');\n        for (let i = 0; i < currencies.length; i++) {\n          const code = currencies[i].getElementsByTagName('Code')[0].textContent;\n          const rate = parseFloat(currencies[i].getElementsByTagName('Value')[0].textContent);\n          json[code] = rate;\n        }\n        ratesRef.current = json;\n        onChangeToPrice(1);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchXmlData();\n  }, [onChangeToPrice]);\n  React.useEffect(() => {\n    onChangeFromPrice(fromPrice);\n  }, [fromCurrency, fromPrice, onChangeFromPrice]);\n  React.useEffect(() => {\n    onChangeToPrice(toPrice);\n  }, [toCurrency, toPrice, onChangeToPrice]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Block, {\n      value: fromPrice,\n      currency: fromCurrency,\n      onChangeCurrency: setFromCurrency,\n      onChangeValue: onChangeFromPrice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Block, {\n      value: toPrice,\n      currency: toCurrency,\n      onChangeCurrency: setToCurrency,\n      onChangeValue: onChangeToPrice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"V7TmhBFFXNCjvz7K8y9R7ZmgpYE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useCallback","useEffect","Block","jsxDEV","_jsxDEV","formatDate","date","year","getFullYear","month","getMonth","toString","padStart","day","getDate","App","_s","fromCurrency","setFromCurrency","useState","toCurrency","setToCurrency","toPrice","setToPrice","fromPrice","setFromPrice","ratesRef","useRef","onChangeFromPrice","value","price","current","result","toFixed","onChangeToPrice","currentDate","Date","fetchXmlData","formattedDate","response","fetch","ok","Error","xmlText","text","parser","DOMParser","xmlDoc","parseFromString","json","currencies","getElementsByTagName","i","length","code","textContent","rate","parseFloat","error","console","className","children","currency","onChangeCurrency","onChangeValue","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Projects/CurseConvertor/convertor/src/App.js"],"sourcesContent":["import React, { useCallback, useEffect } from 'react';\nimport './App.css';\nimport { Block } from './Block';\n\nfunction formatDate(date) {\n  const year = date.getFullYear();\n  const month = (date.getMonth() + 1).toString().padStart(2, '0');\n  const day = date.getDate().toString().padStart(2, '0');\n  return `${year}-${month}-${day}`;\n}\n\nfunction App() {\n  const [fromCurrency, setFromCurrency] = React.useState('RUB');\n  const [toCurrency, setToCurrency] = React.useState('USD');\n  const [toPrice, setToPrice] = React.useState(1);\n  const [fromPrice, setFromPrice] = React.useState(0);\n  const ratesRef = React.useRef({});\n\n  const onChangeFromPrice = useCallback((value) => {\n    const price = value / ratesRef.current[fromCurrency];\n    const result = price * ratesRef.current[toCurrency];\n    setToPrice(result.toFixed(3));\n    setFromPrice(value);\n  }, [fromCurrency, toCurrency]);\n\n  const onChangeToPrice = useCallback((value) => {\n    const result =\n      (ratesRef.current[fromCurrency] / ratesRef.current[toCurrency]) * value;\n    setFromPrice(result.toFixed(3));\n    setToPrice(value);\n  }, [fromCurrency, toCurrency]);\n\n  useEffect(() => {\n    const currentDate = new Date();\n\n    const fetchXmlData = async () => {\n      try {\n        const formattedDate = formatDate(currentDate);\n        const response = await fetch(\n          `https://cbar.az/currencies/${formattedDate}.xml`\n        );\n        if (!response.ok) {\n          throw new Error('Failed to fetch data');\n        }\n        const xmlText = await response.text();\n\n        // Convert XML data to JSON\n        const parser = new DOMParser();\n        const xmlDoc = parser.parseFromString(xmlText, 'text/xml');\n\n        const json = {};\n        const currencies = xmlDoc.getElementsByTagName('Valute');\n        for (let i = 0; i < currencies.length; i++) {\n          const code = currencies[i].getElementsByTagName('Code')[0].textContent;\n          const rate = parseFloat(\n            currencies[i].getElementsByTagName('Value')[0].textContent\n          );\n          json[code] = rate;\n        }\n\n        ratesRef.current = json;\n        onChangeToPrice(1);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchXmlData();\n  }, [onChangeToPrice]);\n\n  React.useEffect(() => {\n    onChangeFromPrice(fromPrice);\n  }, [fromCurrency, fromPrice, onChangeFromPrice]);\n\n  React.useEffect(() => {\n    onChangeToPrice(toPrice);\n  }, [toCurrency, toPrice, onChangeToPrice]);\n\n  return (\n    <div className=\"App\">\n      <Block\n        value={fromPrice}\n        currency={fromCurrency}\n        onChangeCurrency={setFromCurrency}\n        onChangeValue={onChangeFromPrice}\n      />\n      <Block\n        value={toPrice}\n        currency={toCurrency}\n        onChangeCurrency={setToCurrency}\n        onChangeValue={onChangeToPrice}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AACrD,OAAO,WAAW;AAClB,SAASC,KAAK,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,UAAUA,CAACC,IAAI,EAAE;EACxB,MAAMC,IAAI,GAAGD,IAAI,CAACE,WAAW,CAAC,CAAC;EAC/B,MAAMC,KAAK,GAAG,CAACH,IAAI,CAACI,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAEC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAC/D,MAAMC,GAAG,GAAGP,IAAI,CAACQ,OAAO,CAAC,CAAC,CAACH,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACtD,OAAQ,GAAEL,IAAK,IAAGE,KAAM,IAAGI,GAAI,EAAC;AAClC;AAEA,SAASE,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGnB,KAAK,CAACoB,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGtB,KAAK,CAACoB,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGxB,KAAK,CAACoB,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAG1B,KAAK,CAACoB,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAMO,QAAQ,GAAG3B,KAAK,CAAC4B,MAAM,CAAC,CAAC,CAAC,CAAC;EAEjC,MAAMC,iBAAiB,GAAG5B,WAAW,CAAE6B,KAAK,IAAK;IAC/C,MAAMC,KAAK,GAAGD,KAAK,GAAGH,QAAQ,CAACK,OAAO,CAACd,YAAY,CAAC;IACpD,MAAMe,MAAM,GAAGF,KAAK,GAAGJ,QAAQ,CAACK,OAAO,CAACX,UAAU,CAAC;IACnDG,UAAU,CAACS,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC7BR,YAAY,CAACI,KAAK,CAAC;EACrB,CAAC,EAAE,CAACZ,YAAY,EAAEG,UAAU,CAAC,CAAC;EAE9B,MAAMc,eAAe,GAAGlC,WAAW,CAAE6B,KAAK,IAAK;IAC7C,MAAMG,MAAM,GACTN,QAAQ,CAACK,OAAO,CAACd,YAAY,CAAC,GAAGS,QAAQ,CAACK,OAAO,CAACX,UAAU,CAAC,GAAIS,KAAK;IACzEJ,YAAY,CAACO,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC/BV,UAAU,CAACM,KAAK,CAAC;EACnB,CAAC,EAAE,CAACZ,YAAY,EAAEG,UAAU,CAAC,CAAC;EAE9BnB,SAAS,CAAC,MAAM;IACd,MAAMkC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC;IAE9B,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,aAAa,GAAGjC,UAAU,CAAC8B,WAAW,CAAC;QAC7C,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CACzB,8BAA6BF,aAAc,MAC9C,CAAC;QACD,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;QACzC;QACA,MAAMC,OAAO,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;;QAErC;QACA,MAAMC,MAAM,GAAG,IAAIC,SAAS,CAAC,CAAC;QAC9B,MAAMC,MAAM,GAAGF,MAAM,CAACG,eAAe,CAACL,OAAO,EAAE,UAAU,CAAC;QAE1D,MAAMM,IAAI,GAAG,CAAC,CAAC;QACf,MAAMC,UAAU,GAAGH,MAAM,CAACI,oBAAoB,CAAC,QAAQ,CAAC;QACxD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,UAAU,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;UAC1C,MAAME,IAAI,GAAGJ,UAAU,CAACE,CAAC,CAAC,CAACD,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAACI,WAAW;UACtE,MAAMC,IAAI,GAAGC,UAAU,CACrBP,UAAU,CAACE,CAAC,CAAC,CAACD,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAACI,WACjD,CAAC;UACDN,IAAI,CAACK,IAAI,CAAC,GAAGE,IAAI;QACnB;QAEA9B,QAAQ,CAACK,OAAO,GAAGkB,IAAI;QACvBf,eAAe,CAAC,CAAC,CAAC;MACpB,CAAC,CAAC,OAAOwB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAEDrB,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACH,eAAe,CAAC,CAAC;EAErBnC,KAAK,CAACE,SAAS,CAAC,MAAM;IACpB2B,iBAAiB,CAACJ,SAAS,CAAC;EAC9B,CAAC,EAAE,CAACP,YAAY,EAAEO,SAAS,EAAEI,iBAAiB,CAAC,CAAC;EAEhD7B,KAAK,CAACE,SAAS,CAAC,MAAM;IACpBiC,eAAe,CAACZ,OAAO,CAAC;EAC1B,CAAC,EAAE,CAACF,UAAU,EAAEE,OAAO,EAAEY,eAAe,CAAC,CAAC;EAE1C,oBACE9B,OAAA;IAAKwD,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBzD,OAAA,CAACF,KAAK;MACJ2B,KAAK,EAAEL,SAAU;MACjBsC,QAAQ,EAAE7C,YAAa;MACvB8C,gBAAgB,EAAE7C,eAAgB;MAClC8C,aAAa,EAAEpC;IAAkB;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACFhE,OAAA,CAACF,KAAK;MACJ2B,KAAK,EAAEP,OAAQ;MACfwC,QAAQ,EAAE1C,UAAW;MACrB2C,gBAAgB,EAAE1C,aAAc;MAChC2C,aAAa,EAAE9B;IAAgB;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACpD,EAAA,CAnFQD,GAAG;AAAAsD,EAAA,GAAHtD,GAAG;AAqFZ,eAAeA,GAAG;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}