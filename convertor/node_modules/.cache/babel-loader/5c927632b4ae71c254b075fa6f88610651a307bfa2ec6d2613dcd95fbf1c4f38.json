{"ast":null,"code":"import { createRequire } from 'module';\nimport express from 'express';\nimport cors from 'cors';\nimport fetch from 'node-fetch';\nimport dotenv from 'dotenv';\nconst app = express();\nconst port = 3000;\ndotenv.config();\nconst corsOptions = {\n  origin: 'http://localhost:3000',\n  credentials: true,\n  optionSuccessStatus: 200\n};\napp.use(cors(corsOptions));\napp.get('/currencies/formattedDate/:formattedDate', (req, res) => {\n  const {\n    formattedDate\n  } = req.params;\n  const formatted = formatDate(new Date(formattedDate));\n  const apiUrl = `https://cbar.az/currencies/${formatted}.xml`;\n  fetch(apiUrl).then(response => response.text()).then(data => res.send(data)).catch(error => {\n    console.error(error);\n    res.status(500).send('Failed to get information');\n  });\n});\napp.use(express.json());\napp.listen(port, () => {\n  console.log(`Server is running on http://localhost:${port}/curceconvertor`);\n});\nfunction formatDate(date) {\n  const day = date.getDate().toString().padStart(2, '0');\n  const month = (date.getMonth() + 1).toString().padStart(2, '0');\n  const year = date.getFullYear();\n  return `${day}.${month}.${year}`;\n}","map":{"version":3,"names":["createRequire","express","cors","fetch","dotenv","app","port","config","corsOptions","origin","credentials","optionSuccessStatus","use","get","req","res","formattedDate","params","formatted","formatDate","Date","apiUrl","then","response","text","data","send","catch","error","console","status","json","listen","log","date","day","getDate","toString","padStart","month","getMonth","year","getFullYear"],"sources":["C:/Projects/CurseConvertor/convertor/src/App.js"],"sourcesContent":["import { createRequire } from 'module';\nimport express from 'express';\nimport cors from 'cors';\nimport fetch from 'node-fetch';\nimport dotenv from 'dotenv';\n\nconst app = express();\nconst port = 3000;\n\ndotenv.config();\n\nconst corsOptions = {\n  origin: 'http://localhost:3000',\n  credentials: true,\n  optionSuccessStatus: 200,\n};\n\napp.use(cors(corsOptions));\n\napp.get('/currencies/formattedDate/:formattedDate', (req, res) => {\n  const { formattedDate } = req.params;\n  const formatted = formatDate(new Date(formattedDate));\n\n  const apiUrl = `https://cbar.az/currencies/${formatted}.xml`;\n\n  fetch(apiUrl)\n    .then((response) => response.text())\n    .then((data) => res.send(data))\n    .catch((error) => {\n      console.error(error);\n      res.status(500).send('Failed to get information');\n    });\n});\n\napp.use(express.json());\n\napp.listen(port, () => {\n  console.log(`Server is running on http://localhost:${port}/curceconvertor`);\n});\n\nfunction formatDate(date) {\n  const day = date.getDate().toString().padStart(2, '0');\n  const month = (date.getMonth() + 1).toString().padStart(2, '0');\n  const year = date.getFullYear();\n  return `${day}.${month}.${year}`;\n}\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,QAAQ;AACtC,OAAOC,OAAO,MAAM,SAAS;AAC7B,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,MAAM,YAAY;AAC9B,OAAOC,MAAM,MAAM,QAAQ;AAE3B,MAAMC,GAAG,GAAGJ,OAAO,CAAC,CAAC;AACrB,MAAMK,IAAI,GAAG,IAAI;AAEjBF,MAAM,CAACG,MAAM,CAAC,CAAC;AAEf,MAAMC,WAAW,GAAG;EAClBC,MAAM,EAAE,uBAAuB;EAC/BC,WAAW,EAAE,IAAI;EACjBC,mBAAmB,EAAE;AACvB,CAAC;AAEDN,GAAG,CAACO,GAAG,CAACV,IAAI,CAACM,WAAW,CAAC,CAAC;AAE1BH,GAAG,CAACQ,GAAG,CAAC,0CAA0C,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EAChE,MAAM;IAAEC;EAAc,CAAC,GAAGF,GAAG,CAACG,MAAM;EACpC,MAAMC,SAAS,GAAGC,UAAU,CAAC,IAAIC,IAAI,CAACJ,aAAa,CAAC,CAAC;EAErD,MAAMK,MAAM,GAAI,8BAA6BH,SAAU,MAAK;EAE5Df,KAAK,CAACkB,MAAM,CAAC,CACVC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKV,GAAG,CAACW,IAAI,CAACD,IAAI,CAAC,CAAC,CAC9BE,KAAK,CAAEC,KAAK,IAAK;IAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpBb,GAAG,CAACe,MAAM,CAAC,GAAG,CAAC,CAACJ,IAAI,CAAC,2BAA2B,CAAC;EACnD,CAAC,CAAC;AACN,CAAC,CAAC;AAEFrB,GAAG,CAACO,GAAG,CAACX,OAAO,CAAC8B,IAAI,CAAC,CAAC,CAAC;AAEvB1B,GAAG,CAAC2B,MAAM,CAAC1B,IAAI,EAAE,MAAM;EACrBuB,OAAO,CAACI,GAAG,CAAE,yCAAwC3B,IAAK,iBAAgB,CAAC;AAC7E,CAAC,CAAC;AAEF,SAASa,UAAUA,CAACe,IAAI,EAAE;EACxB,MAAMC,GAAG,GAAGD,IAAI,CAACE,OAAO,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACtD,MAAMC,KAAK,GAAG,CAACL,IAAI,CAACM,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAEH,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAC/D,MAAMG,IAAI,GAAGP,IAAI,CAACQ,WAAW,CAAC,CAAC;EAC/B,OAAQ,GAAEP,GAAI,IAAGI,KAAM,IAAGE,IAAK,EAAC;AAClC"},"metadata":{},"sourceType":"module","externalDependencies":[]}