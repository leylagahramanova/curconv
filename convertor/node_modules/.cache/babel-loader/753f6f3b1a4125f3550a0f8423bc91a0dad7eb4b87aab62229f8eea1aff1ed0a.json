{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\CurseConvertor\\\\convertor\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect } from 'react';\nimport './App.css';\nimport { Block } from './Block';\nimport axios from 'axios'; // Step 1: Import axios library\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction formatDate(date) {\n  const year = date.getFullYear();\n  const month = (date.getMonth() + 1).toString().padStart(2, '0');\n  const day = date.getDate().toString().padStart(2, '0');\n  return `${year}-${month}-${day}`;\n}\nfunction App() {\n  _s();\n  // ... (existing code)\n\n  useEffect(() => {\n    const currentDate = new Date();\n    const formattedDate = formatDate(currentDate);\n\n    // Step 2: Make API request to your backend server instead of directly to https://cbar.az\n    axios.get(`http://localhost:5000/currencies/${formattedDate}`).then(response => {\n      const xmlText = response.data;\n      const parser = new DOMParser();\n      const xmlDoc = parser.parseFromString(xmlText, 'text/xml');\n      const json = {};\n      const currencies = xmlDoc.getElementsByTagName('Valute');\n      for (let i = 0; i < currencies.length; i++) {\n        const code = currencies[i].getElementsByTagName('Code')[0].textContent;\n        const rate = parseFloat(currencies[i].getElementsByTagName('Value')[0].textContent);\n        json[code] = rate;\n      }\n      ratesRef.current = json;\n      onChangeToPrice(1);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, [onChangeToPrice]);\n\n  // ... (existing code)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Block, {\n      value: fromPrice,\n      currency: fromCurrency,\n      onChangeCurrency: setFromCurrency,\n      onChangeValue: onChangeFromPrice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Block, {\n      value: toPrice,\n      currency: toCurrency,\n      onChangeCurrency: setToCurrency,\n      onChangeValue: onChangeToPrice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useCallback","useEffect","Block","axios","jsxDEV","_jsxDEV","formatDate","date","year","getFullYear","month","getMonth","toString","padStart","day","getDate","App","_s","currentDate","Date","formattedDate","get","then","response","xmlText","data","parser","DOMParser","xmlDoc","parseFromString","json","currencies","getElementsByTagName","i","length","code","textContent","rate","parseFloat","ratesRef","current","onChangeToPrice","catch","error","console","className","children","value","fromPrice","currency","fromCurrency","onChangeCurrency","setFromCurrency","onChangeValue","onChangeFromPrice","fileName","_jsxFileName","lineNumber","columnNumber","toPrice","toCurrency","setToCurrency","_c","$RefreshReg$"],"sources":["C:/Projects/CurseConvertor/convertor/src/App.js"],"sourcesContent":["import React, { useCallback, useEffect } from 'react';\nimport './App.css';\nimport { Block } from './Block';\nimport axios from 'axios'; // Step 1: Import axios library\n\nfunction formatDate(date) {\n  const year = date.getFullYear();\n  const month = (date.getMonth() + 1).toString().padStart(2, '0');\n  const day = date.getDate().toString().padStart(2, '0');\n  return `${year}-${month}-${day}`;\n}\n\nfunction App() {\n  // ... (existing code)\n\n  useEffect(() => {\n    const currentDate = new Date();\n    const formattedDate = formatDate(currentDate);\n\n    // Step 2: Make API request to your backend server instead of directly to https://cbar.az\n    axios\n      .get(`http://localhost:5000/currencies/${formattedDate}`)\n      .then((response) => {\n        const xmlText = response.data;\n\n        const parser = new DOMParser();\n        const xmlDoc = parser.parseFromString(xmlText, 'text/xml');\n\n        const json = {};\n        const currencies = xmlDoc.getElementsByTagName('Valute');\n        for (let i = 0; i < currencies.length; i++) {\n          const code = currencies[i].getElementsByTagName('Code')[0].textContent;\n          const rate = parseFloat(currencies[i].getElementsByTagName('Value')[0].textContent);\n          json[code] = rate;\n        }\n\n        ratesRef.current = json;\n        onChangeToPrice(1);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }, [onChangeToPrice]);\n\n  // ... (existing code)\n\n  return (\n    <div className=\"App\">\n      <Block\n        value={fromPrice}\n        currency={fromCurrency}\n        onChangeCurrency={setFromCurrency}\n        onChangeValue={onChangeFromPrice}\n      />\n      <Block\n        value={toPrice}\n        currency={toCurrency}\n        onChangeCurrency={setToCurrency}\n        onChangeValue={onChangeToPrice}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}